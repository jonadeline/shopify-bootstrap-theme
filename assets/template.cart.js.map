{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/@shopify/theme-cart/request.js","webpack:///../node_modules/@shopify/theme-cart/validate.js","webpack:///../node_modules/@shopify/theme-cart/theme-cart.js","webpack:///./scripts/templates/cart.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getDefaultRequestConfig","JSON","parse","stringify","credentials","headers","X-Requested-With","Content-Type","fetchJSON","url","config","fetch","then","response","ok","json","cartChange","line","options","method","body","quantity","properties","validate_key","split","length","TypeError","getItemIndex","state","index","items","forEach","item","Promise","reject","Error","updateItem","validate_options","updateCartTotals","thisObj","itemPrice","subtotal","itemTotal","toFixed","parents","eq","children","text","$","change","currentQuantity","parseInt","this","val","minValue","attr","maxValue","console","log","total_price","remove","currentItem","find","price"],"mappings":"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","file":"template.cart.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 52);\n","function getDefaultRequestConfig() {\n  return JSON.parse(\n    JSON.stringify({\n      credentials: 'same-origin',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json;'\n      }\n    })\n  );\n}\n\nfunction fetchJSON(url, config) {\n  return fetch(url, config).then(function(response) {\n    if (!response.ok) {\n      throw response;\n    }\n    return response.json();\n  });\n}\n\nexport function cart() {\n  return fetchJSON('/cart.js', getDefaultRequestConfig());\n}\n\nexport function cartAdd(id, quantity, properties) {\n  var config = getDefaultRequestConfig();\n\n  config.method = 'POST';\n  config.body = JSON.stringify({\n    id: id,\n    quantity: quantity,\n    properties: properties\n  });\n\n  return fetchJSON('/cart/add.js', config);\n}\n\nexport function cartChange(line, options) {\n  var config = getDefaultRequestConfig();\n\n  options = options || {};\n\n  config.method = 'POST';\n  config.body = JSON.stringify({\n    line: line,\n    quantity: options.quantity,\n    properties: options.properties\n  });\n\n  return fetchJSON('/cart/change.js', config);\n}\n\nexport function cartClear() {\n  var config = getDefaultRequestConfig();\n  config.method = 'POST';\n\n  return fetchJSON('/cart/clear.js', config);\n}\n\nexport function cartUpdate(body) {\n  var config = getDefaultRequestConfig();\n\n  config.method = 'POST';\n  config.body = JSON.stringify(body);\n\n  return fetchJSON('/cart/update.js', config);\n}\n\nexport function cartShippingRates() {\n  return fetchJSON('/cart/shipping_rates.json', getDefaultRequestConfig());\n}\n","export function key(key) {\n  if (typeof key !== 'string' || key.split(':').length !== 2) {\n    throw new TypeError(\n      'Theme Cart: Provided key value is not a string with the format xxx:xxx'\n    );\n  }\n}\n\nexport function quantity(quantity) {\n  if (typeof quantity !== 'number') {\n    throw new TypeError(\n      'Theme Cart: An object which specifies a quantity or properties value is required'\n    );\n  }\n}\n\nexport function id(id) {\n  if (typeof id !== 'number') {\n    throw new TypeError('Theme Cart: Variant ID must be a number');\n  }\n}\n\nexport function properties(properties) {\n  if (typeof properties !== 'object') {\n    throw new TypeError('Theme Cart: Properties must be an object');\n  }\n}\n\nexport function options(options) {\n  if (typeof options !== 'object') {\n    throw new TypeError('Theme Cart: Options must be an object');\n  }\n\n  if (\n    typeof options.quantity === 'undefined' &&\n    typeof options.properties === 'undefined'\n  ) {\n    throw new Error(\n      'Theme Cart: You muse define a value for quantity or properties'\n    );\n  }\n\n  if (typeof options.quantity !== 'undefined') {\n    quantity(options.quantity);\n  }\n\n  if (typeof options.properties !== 'undefined') {\n    properties(options.properties);\n  }\n}\n","/**\n * Cart Template Script\n * ------------------------------------------------------------------------------\n * A file that contains scripts highly couple code to the Cart template.\n *\n * @namespace cart\n */\n\nimport * as request from './request';\nimport * as validate from './validate';\n\n/**\n * Returns the state object of the cart\n * @returns {Promise} Resolves with the state object of the cart (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-cart)\n */\nexport function getState() {\n  return request.cart();\n}\n\n/**\n * Returns the index of the cart line item\n * @param {string} key The unique key of the line item\n * @returns {Promise} Resolves with the index number of the line item\n */\nexport function getItemIndex(key) {\n  validate.key(key);\n\n  return request.cart().then(function(state) {\n    var index = -1;\n\n    state.items.forEach(function(item, i) {\n      index = item.key === key ? i + 1 : index;\n    });\n\n    if (index === -1) {\n      return Promise.reject(\n        new Error('Theme Cart: Unable to match line item with provided key')\n      );\n    }\n\n    return index;\n  });\n}\n\n/**\n * Fetches the line item object\n * @param {string} key The unique key of the line item\n * @returns {Promise} Resolves with the line item object (See response of cart/add.js https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#add-to-cart)\n */\nexport function getItem(key) {\n  validate.key(key);\n\n  return request.cart().then(function(state) {\n    var lineItem = null;\n\n    state.items.forEach(function(item) {\n      lineItem = item.key === key ? item : lineItem;\n    });\n\n    if (lineItem === null) {\n      return Promise.reject(\n        new Error('Theme Cart: Unable to match line item with provided key')\n      );\n    }\n\n    return lineItem;\n  });\n}\n\n/**\n * Add a new line item to the cart\n * @param {number} id The variant's unique ID\n * @param {object} options Optional values to pass to /cart/add.js\n * @param {number} options.quantity The quantity of items to be added to the cart\n * @param {object} options.properties Line item property key/values (https://help.shopify.com/en/themes/liquid/objects/line_item#line_item-properties)\n * @returns {Promise} Resolves with the line item object (See response of cart/add.js https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#add-to-cart)\n */\nexport function addItem(id, options) {\n  options = options || {};\n\n  validate.id(id);\n\n  return request.cartAdd(id, options.quantity, options.properties);\n}\n\n/**\n * Changes the quantity and/or properties of an existing line item.\n * @param {string} key The unique key of the line item (https://help.shopify.com/en/themes/liquid/objects/line_item#line_item-key)\n * @param {object} options Optional values to pass to /cart/add.js\n * @param {number} options.quantity The quantity of items to be added to the cart\n * @param {object} options.properties Line item property key/values (https://help.shopify.com/en/themes/liquid/objects/line_item#line_item-properties)\n * @returns {Promise} Resolves with the state object of the cart (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-cart)\n */\nexport function updateItem(key, options) {\n  validate.key(key);\n  validate.options(options);\n\n  return getItemIndex(key).then(function(line) {\n    return request.cartChange(line, options);\n  });\n}\n\n/**\n * Removes a line item from the cart\n * @param {string} key The unique key of the line item (https://help.shopify.com/en/themes/liquid/objects/line_item#line_item-key)\n * @returns {Promise} Resolves with the state object of the cart (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-cart)\n */\nexport function removeItem(key) {\n  validate.key(key);\n\n  return getItemIndex(key).then(function(line) {\n    return request.cartChange(line, { quantity: 0 });\n  });\n}\n\n/**\n * Sets all quantities of all line items in the cart to zero. This does not remove cart attributes nor the cart note.\n * @returns {Promise} Resolves with the state object of the cart (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-cart)\n */\nexport function clearItems() {\n  return request.cartClear();\n}\n\n/**\n * Gets all cart attributes\n * @returns {Promise} Resolves with the cart attributes object\n */\nexport function getAttributes() {\n  return request.cart().then(function(state) {\n    return state.attributes;\n  });\n}\n\n/**\n * Sets all cart attributes\n * @returns {Promise} Resolves with the cart state object\n */\nexport function updateAttributes(attributes) {\n  return request.cartUpdate({ attributes: attributes });\n}\n\n/**\n * Clears all cart attributes\n * @returns {Promise} Resolves with the cart state object\n */\nexport function clearAttributes() {\n  return getAttributes().then(function(attributes) {\n    for (var key in attributes) {\n      attributes[key] = '';\n    }\n    return updateAttributes(attributes);\n  });\n}\n\n/**\n * Gets cart note\n * @returns {Promise} Resolves with the cart note string\n */\nexport function getNote() {\n  return request.cart().then(function(state) {\n    return state.note;\n  });\n}\n\n/**\n * Sets cart note\n * @returns {Promise} Resolves with the cart state object\n */\nexport function updateNote(note) {\n  return request.cartUpdate({ note: note });\n}\n\n/**\n * Clears cart note\n * @returns {Promise} Resolves with the cart state object\n */\nexport function clearNote() {\n  return request.cartUpdate({ note: '' });\n}\n\n/**\n * Get estimated shipping rates.\n * @returns {Promise} Resolves with response of /cart/shipping_rates.json (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-shipping-rates)\n */\nexport function getShippingRates() {\n  return request.cartShippingRates();\n}\n","import * as cart from '@shopify/theme-cart';\n\n$('input').change(function() {\n  const currentQuantity = parseInt($(this).val(), 10);\n  const minValue = parseInt($(this).attr('min'), 10);\n  // If the max attribute doesn't exist for the item, should return false.\n  const maxValue = parseInt($(this).attr('max'), 10);\n  const key = $(this).attr('id').split('_', 2)[1];\n\n  console.log(`Input for ${key}`);\n\n  if (currentQuantity === minValue) {\n    cart.removeItem(key).then(state => {\n      console.log('This item was removed');\n      updateCartTotals($(this), currentQuantity, 0, state.total_price);\n      removeCartRow($(this));\n    });\n  } else if (!maxValue) {\n    cart.updateItem(key, {quantity: currentQuantity}).then(state => {\n      const currentItem = state.items.find(item => item.key === key);\n      console.log(`The item with key '${key}' now has quantity ${currentItem.quantity} and a price of ${currentItem.price}`);\n      updateCartTotals($(this), currentItem.quantity, currentItem.price, state.total_price);\n    });\n  } else if (currentQuantity <= maxValue) {\n    cart.updateItem(key, {quantity: currentQuantity}).then(state => {\n      const currentItem = state.items.find(item => item.key === key);\n      console.log(`The item with key '${key}' now has quantity ${currentItem.quantity}`);\n      updateCartTotals($(this), currentItem.quantity, currentItem.price, state.total_price);\n    });\n  }\n});\n\nfunction updateCartTotals(thisObj, itemPrice, quantity, subtotal) {\n  const itemTotal = ((itemPrice * quantity) / 100).toFixed(2);\n  thisObj.parents().eq(1).children(\"td.cart-money[data-label='Total']\")\n    .text(`$${itemTotal}`);\n  $('#subtotal').text(`$${(subtotal / 100).toFixed(2)}`);\n}\n\nfunction removeCartRow(thisObj) {\n  thisObj.parents().eq(1).remove();\n}\n"],"sourceRoot":""}